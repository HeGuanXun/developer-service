<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hgx.developer.dao.DictionaryDao">
	<resultMap id="result_Dictionary_Map" type="com.hgx.developer.model.Dictionary">
		<id column="id" property="id" />
		<result column="create_by" property="createBy" />
		<result column="create_time" property="createTime" />
		<result column="update_by" property="updateBy" />
		<result column="update_time" property="updateTime" />
		<result column="parent_id" property="parentId" />
		<result column="level" property="level" />
		<result column="code" property="code" />
		<result column="description" property="description" />
		<result column="sort" property="sort" />
		<result column="key" property="key" />
		<result column="value" property="value" />
	</resultMap>

	<sql id="dictionary_Column">
		id,parent_id,level,code,description,sort,key,value,create_by,create_time,update_by,update_time
	</sql>

	<!--获得类名为:Dictionary对应的数据库表的数据总行数 -->
	<select id="getDictionaryRowCount" parameterType="com.hgx.developer.utils.Assist" resultType="java.lang.Long">
		select count(*) from dictionary
		<if test="require!=null">
			<include refid="assist" />
		</if>
	</select>

	<!-- 获得类名为:Dictionary对应数据库中表的数据集合 -->
	<select id="selectDictionary" parameterType="com.hgx.developer.utils.Assist" resultMap="result_Dictionary_Map">
		select * from (
			select
		<choose>
			<when test="resultColumn!=null">${resultColumn}</when>
			<otherwise><include refid="dictionary_Column" /></otherwise>
		</choose>
			from dictionary
		<if test="require!=null"><include refid="assist" /></if>
		<if test="order !=null">${order}</if>
			) result
		<choose>
			<when test="startRow!=null">where page &gt; #{startRow} <if test="rowSize!=null">and page &lt;= <if test="startRow!=null">#{startRow}+</if>#{rowSize} </if></when>
			<otherwise><if test="rowSize!=null">where page &lt;= #{rowSize}</if></otherwise>
		</choose>
	</select>
		<!-- 通过Dictionary的id获得对应数据库中表的数据对象 -->
		<select id="selectDictionaryById" parameterType="Integer" resultMap="result_Dictionary_Map">
		select
			<include refid="dictionary_Column" />
		from dictionary
		where id = #{id}
		</select>

	<!-- 获得一个Dictionary对象,以参数Dictionary对象中不为空的属性作为条件进行查询 -->
	<select id="selectDictionaryObjSingle" parameterType="com.hgx.developer.model.Dictionary" resultMap="result_Dictionary_Map">
		select top 1
		<include refid="dictionary_Column" />
		from dictionary
		<where>
			<if test="parentId != null"> and parent_id = #{parentId}</if>
			<if test="level != null"> and level = #{level}</if>
			<if test="code != null"> and code = #{code}</if>
			<if test="description != null"> and description = #{description}</if>
			<if test="sort != null"> and sort = #{sort}</if>
			<if test="key != null"> and key = #{key}</if>
			<if test="value != null"> and value = #{value}</if>
			<if test="createBy != null"> and create_by = #{createBy}</if>
			<if test="createTime != null"> and create_time = #{createTime}</if>
			<if test="updateBy != null"> and update_by = #{updateBy}</if>
			<if test="updateTime != null"> and update_time = #{updateTime}</if>
			<if test="id != null"> and id = #{id} </if>
		</where>
		LIMIT 1
	</select>

	<!-- 获得Dictionary对象,以参数Dictionary对象中不为空的属性作为条件进行查询 -->
	<select id="selectDictionaryByObj" parameterType="com.hgx.developer.model.Dictionary" resultMap="result_Dictionary_Map">
		select
		<include refid="dictionary_Column" />
		from dictionary
		<where>
			<if test="parentId != null"> and parent_id = #{parentId}</if>
			<if test="level != null"> and level = #{level}</if>
			<if test="code != null"> and code = #{code}</if>
			<if test="description != null"> and description = #{description}</if>
			<if test="sort != null"> and sort = #{sort}</if>
			<if test="key != null"> and key = #{key}</if>
			<if test="value != null"> and value = #{value}</if>
			<if test="createBy != null"> and create_by = #{createBy}</if>
			<if test="createTime != null"> and create_time = #{createTime}</if>
			<if test="updateBy != null"> and update_by = #{updateBy}</if>
			<if test="updateTime != null"> and update_time = #{updateTime}</if>
			<if test="id != null"> and id = #{id} </if>
		</where>
	</select>

	<!-- 将Dictionary中属性值不为null的数据,插入到对应数据库的表中 -->
	<insert id="insertNotNullDictionary" parameterType="com.hgx.developer.model.Dictionary">
		insert into dictionary
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="parentId != null">parent_id,</if>
			<if test="level != null">level,</if>
			<if test="code != null">code,</if>
			<if test="description != null">description,</if>
			<if test="sort != null">sort,</if>
			<if test="key != null">key,</if>
			<if test="value != null">value,</if>
			<if test="createBy != null">create_by,</if>
			<if test="createTime != null">create_time,</if>
			<if test="updateBy != null">update_by,</if>
			<if test="updateTime != null">update_time,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">#{id},</if>
			<if test="parentId != null">#{parentId},</if>
			<if test="level != null">#{level},</if>
			<if test="code != null">#{code},</if>
			<if test="description != null">#{description},</if>
			<if test="sort != null">#{sort},</if>
			<if test="key != null">#{key},</if>
			<if test="value != null">#{value},</if>
			<if test="createBy != null">#{createBy},</if>
			<if test="createTime != null">#{createTime},</if>
			<if test="updateBy != null">#{updateBy},</if>
			<if test="updateTime != null">#{updateTime},</if>
		</trim>
	</insert>

	<!-- 将Dictionary批量插入到对应数据库的表中 -->
	<insert id="insertDictionaryByBatch" parameterType="ArrayList">
		insert into dictionary(id,parent_id,level,code,description,sort,key,value,create_by,create_time,update_by,update_time) values
		<foreach collection="list" item="item" index="index"
				 separator=",">
			(#{item.id},#{item.parentId},#{item.level},#{item.code},#{item.description},#{item.sort},#{item.key},#{item.value},#{item.createBy},#{item.createTime},#{item.updateBy},#{item.updateTime})
		</foreach>
	</insert>

		<!-- 通过Dictionary的id将数据库表中对应的数据删除 -->
		<delete id="deleteDictionaryById" parameterType="Integer">
		delete from dictionary
		where  id  =  #{id}
		</delete>

		<!-- 通过Dictionary的id将Dictionary中属性值不为null的数据更新到数据库对应的表中 -->
		<update id="updateNotNullDictionaryById" parameterType="com.hgx.developer.model.Dictionary">
		update dictionary
			<set>
				<if test="parentId != null">parent_id = #{parentId},</if>
				<if test="level != null">level = #{level},</if>
				<if test="code != null">code = #{code},</if>
				<if test="description != null">description = #{description},</if>
				<if test="sort != null">sort = #{sort},</if>
				<if test="key != null">key = #{key},</if>
				<if test="value != null">value = #{value},</if>
				<if test="createBy != null">create_by = #{createBy},</if>
				<if test="createTime != null">create_time = #{createTime},</if>
				<if test="updateBy != null">update_by = #{updateBy},</if>
				<if test="updateTime != null">update_time = #{updateTime},</if>
			</set>
		where id = #{id}
		</update>
	<!-- assist是查询辅助工具类, ${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
	<sql id="assist">
		<where>
			<foreach collection="require" item="req" separator=" ">
				${req.require}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.customRequire !=null">
					<foreach collection="req.customRequire" item="cr" separator=" ">
						${cr.require}
						<if test="cr.value != null">
							#{cr.value}
						</if>
						<if test="cr.values != null">
							<foreach collection="cr.values" item="value"
									 separator=",">
								#{value}
							</foreach>
						</if>
						<if test="cr.suffix != null"> ${cr.suffix}</if>
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- updateAssist用于更新数据查询辅助工具类,作用assist与一致 -->
	<sql id="updateAssist">
		<where>
			<foreach collection="assist.require" item="req" separator=" ">
				${req.require}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.customRequire !=null">
					<foreach collection="req.customRequire" item="cr" separator=" ">
						${cr.require}
						<if test="cr.value != null">
							#{cr.value}
						</if>
						<if test="cr.values != null">
							<foreach collection="cr.values" item="value"
									 separator=",">
								#{value}
							</foreach>
						</if>
						<if test="cr.suffix != null"> ${cr.suffix}</if>
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

</mapper>