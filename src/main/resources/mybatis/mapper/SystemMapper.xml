<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hgx.developer.dao.SystemDao">
	<resultMap id="result_System_Map" type="com.hgx.developer.model.System">
		<id column="id" property="id" />
		<result column="system_name" property="systemName" />
		<result column="create_time" property="createTime" />
	</resultMap>

	<sql id="system_Column">
		id,system_name,create_time
	</sql>

	<!--获得类名为:System对应的数据库表的数据总行数 -->
	<select id="getSystemRowCount" parameterType="com.hgx.developer.utils.Assist" resultType="java.lang.Long">
		select count(*) from system
		<if test="require!=null">
			<include refid="assist" />
		</if>
	</select>

	<!-- 获得类名为:System对应数据库中表的数据集合 -->
	<select id="selectSystem" parameterType="com.hgx.developer.utils.Assist" resultMap="result_System_Map">
		select * from (
			select
		<choose>
			<when test="resultColumn!=null">${resultColumn}</when>
			<otherwise><include refid="system_Column" /></otherwise>
		</choose>
			from system
		<if test="require!=null"><include refid="assist" /></if>
		<if test="order !=null">${order}</if>
			) result
		<choose>
			<when test="startRow!=null">where page &gt; #{startRow} <if test="rowSize!=null">and page &lt;= <if test="startRow!=null">#{startRow}+</if>#{rowSize} </if></when>
			<otherwise><if test="rowSize!=null">where page &lt;= #{rowSize}</if></otherwise>
		</choose>
	</select>
		<!-- 通过System的id获得对应数据库中表的数据对象 -->
		<select id="selectSystemById" parameterType="Integer" resultMap="result_System_Map">
		select
			<include refid="system_Column" />
		from system
		where id = #{id}
		</select>

	<!-- 获得一个System对象,以参数System对象中不为空的属性作为条件进行查询 -->
	<select id="selectSystemObjSingle" parameterType="com.hgx.developer.model.System" resultMap="result_System_Map">
		select top 1
		<include refid="system_Column" />
		from system
		<where>
			<if test="systemName != null"> and system_name = #{systemName}</if>
			<if test="createTime != null"> and create_time = #{createTime}</if>
			<if test="id != null"> and id = #{id} </if>
		</where>
		LIMIT 1
	</select>

	<!-- 获得System对象,以参数System对象中不为空的属性作为条件进行查询 -->
	<select id="selectSystemByObj" parameterType="com.hgx.developer.model.System" resultMap="result_System_Map">
		select
		<include refid="system_Column" />
		from system
		<where>
			<if test="systemName != null"> and system_name = #{systemName}</if>
			<if test="createTime != null"> and create_time = #{createTime}</if>
			<if test="id != null"> and id = #{id} </if>
		</where>
	</select>

	<!-- 将System中属性值不为null的数据,插入到对应数据库的表中 -->
	<insert id="insertNotNullSystem" parameterType="com.hgx.developer.model.System">
		insert into system
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="systemName != null">system_name,</if>
			<if test="createTime != null">create_time,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">#{id},</if>
			<if test="systemName != null">#{systemName},</if>
			<if test="createTime != null">#{createTime},</if>
		</trim>
	</insert>

	<!-- 将System批量插入到对应数据库的表中 -->
	<insert id="insertSystemByBatch" parameterType="ArrayList">
		insert into system(id,system_name,create_time) values
		<foreach collection="list" item="item" index="index"
				 separator=",">
			(#{item.id},#{item.systemName},#{item.createTime})
		</foreach>
	</insert>

		<!-- 通过System的id将数据库表中对应的数据删除 -->
		<delete id="deleteSystemById" parameterType="Integer">
		delete from system
		where  id  =  #{id}
		</delete>

		<!-- 通过System的id将System中属性值不为null的数据更新到数据库对应的表中 -->
		<update id="updateNotNullSystemById" parameterType="com.hgx.developer.model.System">
		update system
			<set>
				<if test="systemName != null">system_name = #{systemName},</if>
				<if test="createTime != null">create_time = #{createTime},</if>
			</set>
		where id = #{id}
		</update>
	<!-- assist是查询辅助工具类, ${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
	<sql id="assist">
		<where>
			<foreach collection="require" item="req" separator=" ">
				${req.require}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.customRequire !=null">
					<foreach collection="req.customRequire" item="cr" separator=" ">
						${cr.require}
						<if test="cr.value != null">
							#{cr.value}
						</if>
						<if test="cr.values != null">
							<foreach collection="cr.values" item="value"
									 separator=",">
								#{value}
							</foreach>
						</if>
						<if test="cr.suffix != null"> ${cr.suffix}</if>
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- updateAssist用于更新数据查询辅助工具类,作用assist与一致 -->
	<sql id="updateAssist">
		<where>
			<foreach collection="assist.require" item="req" separator=" ">
				${req.require}
				<if test="req.value != null">
					#{req.value}
				</if>
				<if test="req.values != null">
					<foreach collection="req.values" item="value" separator=",">
						#{value}
					</foreach>
				</if>
				<if test="req.customRequire !=null">
					<foreach collection="req.customRequire" item="cr" separator=" ">
						${cr.require}
						<if test="cr.value != null">
							#{cr.value}
						</if>
						<if test="cr.values != null">
							<foreach collection="cr.values" item="value"
									 separator=",">
								#{value}
							</foreach>
						</if>
						<if test="cr.suffix != null"> ${cr.suffix}</if>
					</foreach>
				</if>
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

</mapper>